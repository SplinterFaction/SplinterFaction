#define TA // This is a TA script 

#include "sfxtype.h" 
#include "exptype.h" 

piece base, firepoint1, spinner; // these are the pieces of the model 

static-var terraintype, bmoving, moving; // these are the variables 

// #define gdscannon 1024+0 // this is a custom explosion generator thinging 

// Signal definitions 
#define SIG_AIM 2
#define SIG_AIM_2 4 // this is a aim define 

SmokeUnit(healthpercent, sleeptime, smoketype) // this is a standard smoke point define 
{ 
while( get BUILD_PERCENT_LEFT ) 
{ 
sleep 400; 
} 
while( TRUE ) 
{ 
healthpercent = get HEALTH; 
if( healthpercent < 66 ) 
{ 
smoketype = 256 | 2; 
if( Rand( 1, 66 ) < healthpercent ) 
{ 
smoketype = 256 | 1; 
} 
emit-sfx 1024 from spinner; 
} 
sleeptime = healthpercent * 50; 
if( sleeptime < 200 ) 
{ 
sleeptime = 200; 
} 
sleep sleeptime; 
} 
} 


fx()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		emit-sfx 2050 from firepoint1;
		sleep 30;
	}
}


Create() // tells it what to do on creation 
{
        start-script SmokeUnit(); 
//        start-script fx();

        spin spinner around y-axis speed <150.005495>; 
} 

RestoreAfterDelay() // restore function to turn the turret and so forth back to start 
{ 
sleep 3000; 
} 

AimWeapon1(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{ 
signal SIG_AIM; 
set-signal-mask SIG_AIM; 
return (1); 
} 

FireWeapon1() // what do while firing, fires 1 barrel then the next , and resets 
{
} 

AimFromWeapon1(piecenum) // where it aims the weapon from 
{ 
piecenum = firepoint1; 
} 

QueryWeapon1(piecenum) // where the shot is called from 
{ 
piecenum = firepoint1; 
} 

AimWeapon2(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{ 
signal SIG_AIM; 
set-signal-mask SIG_AIM; 
return (1); 
} 

FireWeapon2() // what do while firing, fires 1 barrel then the next , and resets 
{
} 

AimFromWeapon2(piecenum) // where it aims the weapon from 
{ 
piecenum = base; 
} 

QueryWeapon2(piecenum) // where the shot is called from 
{ 
piecenum = base; 
} 

/*
AimWeapon3(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{ 
signal SIG_AIM_2; 
set-signal-mask SIG_AIM_2; 
turn turret to y-axis heading speed <255>; 
turn barrel1 to x-axis <0> - pitch speed <150>;  
wait-for-turn turret around y-axis;
wait-for-turn barrel1 around x-axis;  
start-script RestoreAfterDelay(); 
return (1); 
} 

FireWeapon3() // what do while firing, fires 1 barrel then the next , and resets 
{
emit-sfx 2049 from firepoint1; 
} 

AimFromWeapon3(piecenum) // where it aims the weapon from 
{ 
piecenum = barrel1; 
} 

QueryWeapon3(piecenum) // where the shot is called from 
{ 
piecenum = firepoint1; 
} 
*/

Killed(severity, corpsetype) // how it explodes 
{ 
	corpsetype = 1; 
	explode base type EXPLODE_ON_HIT;
	explode spinner type EXPLODE_ON_HIT;
} 
