#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, barrel1, firepoint1, firepoint2, firepoint3, firepoint4, firepoint5, sfxpoint1, lilypad;

// Signal definitions
#define SIG_AIM 2 // this is a aim define <- o_O This is a kill flag

static-var  shooting_num;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx 1026 from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}


Create()
{
	shooting_num=1;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 3000;
	turn turret to y-axis <0.000000> speed <60.000000>;
	turn barrel1 to x-axis <0.000000> speed <30.000000>;
}

AimWeapon1(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{
signal SIG_AIM; 
set-signal-mask SIG_AIM; 
turn turret to y-axis heading speed <5000>;
turn barrel1 to x-axis <0> - pitch speed <5000>; 
wait-for-turn turret around y-axis;
wait-for-turn barrel1 around x-axis;  
start-script RestoreAfterDelay(); 
return (1); 
} 

FireWeapon1() // what do while firing, fires 1 barrel then the next , and resets 
{ 
	if(shooting_num==1)
	{
		emit-sfx 1024 from firepoint2;
	}
	if(shooting_num==2)
	{
		emit-sfx 1024 from firepoint3;
	}
	if(shooting_num==3)
	{
		emit-sfx 1024 from firepoint4;
	}
	if(shooting_num==4)
	{
		emit-sfx 1024 from firepoint5;
	}
	if(shooting_num==5)
	{
		emit-sfx 1024 from firepoint1;
	}

	shooting_num=shooting_num+1;

            if( shooting_num == 6)
            {  
            	shooting_num=1;
            }
} 

AimFromWeapon1(piecenum) // where it aims the weapon from 
{ 
	piecenum = barrel1; 
} 

QueryWeapon1(piecenum) // where the shot is called from 
{ 
	if (shooting_num==1) 
	{  
		piecenum=firepoint1;     
	}
	
	if (shooting_num==2)
	{   
		piecenum=firepoint2;
	} 
	
	if (shooting_num==3)
	{   
		piecenum=firepoint3;
	} 
	
	if (shooting_num==4)
	{   
		piecenum=firepoint4;
	} 
	
	if (shooting_num==5)
	{   
		piecenum=firepoint5;
	} 
} 

Killed(severity, corpsetype)
{
	corpsetype = 1;
	explode turret type EXPLODE_ON_HIT;
	explode barrel1 type EXPLODE_ON_HIT;
}
